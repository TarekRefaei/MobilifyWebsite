{"version":3,"file":"next-sanity.cjs.production.min.js","sources":["../src/aborter.ts","../src/currentUser.ts","../src/useSubscription.ts","../src/client.ts"],"sourcesContent":["export interface Aborter {\n  abort(): void\n  signal: AbortSignal\n}\n\nclass MockAbortController {\n  _signal = {aborted: false}\n  get signal() {\n    return this._signal as AbortSignal\n  }\n  abort() {\n    this._signal.aborted = true\n  }\n}\n\nexport function getAborter(): Aborter {\n  return typeof AbortController === 'undefined'\n    ? new MockAbortController()\n    : new AbortController()\n}\n","import {useEffect, useState} from 'react'\n\nimport {Aborter, getAborter} from './aborter'\nimport {CurrentUser} from './types'\n\nexport function createCurrentUserHook({projectId}: {projectId: string; dataset?: string}) {\n  // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n  return () => useCurrentUser(projectId)\n}\n\nexport function getCurrentUser(\n  projectId: string,\n  abort: Aborter,\n  token?: string\n): Promise<CurrentUser | null> {\n  const headers = token ? {Authorization: `Bearer ${token}`} : undefined\n  return fetch(`https://${projectId}.api.sanity.io/v1/users/me`, {\n    credentials: 'include',\n    signal: abort.signal,\n    headers,\n  })\n    .then((res) => res.json())\n    .then((res) => (res?.id ? res : null))\n}\n\nfunction useCurrentUser(projectId: string) {\n  const [data, setUser] = useState<CurrentUser | null>()\n  const [error, setError] = useState<Error>()\n\n  useEffect(() => {\n    const aborter = getAborter()\n    getCurrentUser(projectId, aborter)\n      .then(setUser)\n      .catch((err: Error) => err.name !== 'AbortError' && setError(err))\n\n    return () => {\n      aborter.abort()\n    }\n  }, [projectId])\n\n  return {data, error, loading: data !== null || !error}\n}\n","import {GroqStore, Subscription} from '@sanity/groq-store'\nimport {useEffect, useMemo, useState} from 'react'\n\nimport {Aborter, getAborter} from './aborter'\nimport {getCurrentUser} from './currentUser'\nimport {ProjectConfig} from './types'\n\nconst EMPTY_PARAMS = {}\n\nexport type Params = Record<string, unknown>\nexport interface SubscriptionOptions<R = any> {\n  enabled?: boolean\n  params?: Params\n  initialData?: R\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function createPreviewSubscriptionHook({\n  projectId,\n  dataset,\n  token,\n  EventSource,\n  documentLimit = 3000,\n}: ProjectConfig & {documentLimit?: number}) {\n  // Only construct/setup the store when `getStore()` is called\n  let store: Promise<GroqStore>\n\n  return function usePreviewSubscription<R = any>(\n    query: string,\n    options: SubscriptionOptions<R> = {}\n  ) {\n    const {params = EMPTY_PARAMS, initialData, enabled} = options\n    return useQuerySubscription<R>({\n      getStore,\n      projectId,\n      query,\n      params,\n      initialData: initialData as any,\n      enabled: enabled ? typeof window !== 'undefined' : false,\n      token,\n    })\n  }\n\n  function getStore(abort: Aborter) {\n    if (!store) {\n      store = import('@sanity/groq-store').then(({groqStore}) => {\n        // Skip creating the groq store if we've been unmounted to save memory and reduce gc pressure\n        if (abort.signal.aborted) {\n          const error = new Error('Cancelling groq store creation')\n          // This ensures we can skip it in the catch block same way\n          error.name = 'AbortError'\n          return Promise.reject(error)\n        }\n\n        return groqStore({\n          projectId,\n          dataset,\n          documentLimit,\n          token,\n          EventSource,\n          listen: true,\n          overlayDrafts: true,\n          subscriptionThrottleMs: 10,\n        })\n      })\n    }\n    return store\n  }\n}\n\nfunction useQuerySubscription<R = any>(options: {\n  getStore: (abort: Aborter) => Promise<GroqStore>\n  projectId: string\n  query: string\n  params: Params\n  initialData: R\n  enabled: boolean\n  token?: string\n}) {\n  const {getStore, projectId, query, initialData, enabled = false, token} = options\n  const [error, setError] = useState<Error>()\n  const [loading, setLoading] = useState(false)\n  const [data, setData] = useState<R>()\n  const params = useParams(options.params)\n\n  // Use \"deep\" dependency comparison because params are often not _referentially_ equal,\n  // but contains the same shallow properties, eg `{\"slug\": \"some-slug\"}`\n  useEffect(() => {\n    if (!enabled) {\n      return\n    }\n\n    setLoading(true)\n\n    const aborter = getAborter()\n    let subscription: Subscription | undefined\n    getCurrentUser(projectId, aborter, token)\n      .then((user) => {\n        if (user) {\n          return\n        }\n\n        // eslint-disable-next-line no-console\n        console.warn('Not authenticated - preview not available')\n        throw new Error('Not authenticated - preview not available')\n      })\n      .then(() => getStore(aborter))\n      .then((store) => {\n        subscription = store.subscribe(query, params, (err, result) => {\n          if (err) {\n            setError(err)\n          } else {\n            setData(result)\n          }\n        })\n      })\n      .catch((err: Error) => (err.name === 'AbortError' ? null : setError(err)))\n      .finally(() => setLoading(false))\n\n    // eslint-disable-next-line consistent-return\n    return () => {\n      if (subscription) {\n        subscription.unsubscribe()\n      }\n\n      aborter.abort()\n    }\n  }, [getStore, query, params, enabled, projectId, token])\n\n  return {\n    data: typeof data === 'undefined' ? initialData : data,\n    loading,\n    error,\n  }\n}\n\n// Return params that are stable with deep equal as long as the key order is the same\nfunction useParams(params: Params): Params {\n  const stringifiedParams = useMemo(() => JSON.stringify(params), [params])\n  return useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams])\n}\n","import type {ClientConfig, SanityClient} from '@sanity/client'\nimport sanityClient from '@sanity/client'\n\nexport function createClient(config: ClientConfig): SanityClient {\n  return sanityClient(config)\n}\n"],"names":["MockAbortController","this","aborted","abort","_signal","key","get","getAborter","AbortController","getCurrentUser","projectId","token","fetch","credentials","signal","headers","Authorization","undefined","then","res","json","id","EMPTY_PARAMS","config","sanityClient","useState","data","setUser","error","setError","useEffect","aborter","catch","err","name","loading","useCurrentUser","store","dataset","EventSource","_ref$documentLimit","documentLimit","query","options","_options$params","params","getStore","initialData","_options$enabled","enabled","setLoading","setData","stringifiedParams","useMemo","JSON","stringify","parse","useParams","subscription","user","console","warn","Error","subscribe","result","finally","unsubscribe","useQuerySubscription","window","groqStore","Promise","reject","listen","overlayDrafts","subscriptionThrottleMs"],"mappings":"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"}